dir()
landsat5 <- stack("Data/centralvalley-2011LT5.tif")
require(raster)
landsat5 <- stack("Data/centralvalley-2011LT5.tif")
# Change the names of landsat5 using the names() function.
names(landsat5) <- c('blue', 'green', 'red', 'NIR', 'SWIR1', 'SWIR2')
plot(landsat5[[1]])
nlcd <- stack("Data/nlcd-L1_Sml.tif")
nlcd
names(nlcd) <- c("nlcd2001", "nlcd2011")
plot(ncld)
plot(nlcd)
landsat5Sml <- mask(landsat5,nlcd)
landsat5Sml <- crop(landsat5,nlcd)
plot(landsat5Sml)
?writeRaster
writeRaster(landsat5Sml,"Data/centralvalley-2011LT5_Sml.tif",format="GTiff", overwrite=TRUE)
plot(x = nlcd, # raster to plot.
col = sample(hcl.colors(9, palette = "Zissou")) # Define the colour ramp
)
classdf <- data.frame(classvalue1 = c(1, 2, 3, 4, 5, 7, 8, 9), # Class Number.
nlcdclass = c("Water", "Developed", "Barren", "Forest", "Shrubland", "Herbaceous", "Planted/Cultivated", "Wetlands"), # Class Name.
classcolor = c("#5475A8", "#B50000", "#D2CDC0", "#38814E", "#AF963C", "#D1D182", "#FBF65D", "#C8E6F8") # # Hex codes of colours.
)
classdf
nlcd2011 <- nlcd[[2]] # OR nlcd[["nlcd2011"]]
landsat5
library(raster)
library(rpart)
library(dismo)
samp2011 <- sampleStratified(x = nlcd2011, # Raster to be "sampled"
size = 200, # Number of samples per class
na.rm = TRUE, # NA values are removed from random sample?
sp = TRUE # Output as a SpatialPointsDataFrame?
)
samp2011 <- sampleStratified(x = nlcd2011, # Raster to be "sampled"
size = 200, # Number of samples per class
na.rm = TRUE, # NA values are removed from random sample?
sp = TRUE # Output as a SpatialPointsDataFrame?
)
samp2011
head(samp2011)
SampLCC <- samp2011$samp2011
table(SampLCC)
SampLCC <- samp2011$nlcd2011
table(SampLCC)
classdf
sampvals <- extract(x = landsat5, # Define the raster to be samples.
y = samp2011, # Define the spatial vector data with the locations to sample.
df = TRUE # Return the results as a data.frame?
)
data.frame(classvalue = samp2011@data$nlcd2011, # Get the Landcover "class" for each selected location.
extract(x = landsat5, # Define the raster to be samples.
y = samp2011, # Define the spatial vector data with the locations to sample.
df = TRUE # Return the results as a data.frame?
)[-1] # The data.frame with the hyperspectral bands in `landsat5` minus the ID column
)
sampdata <- data.frame(classvalue = samp2011@data$nlcd2011, # Get the Landcover "class" for each selected location.
extract(x = landsat5, # Define the raster to be samples.
y = samp2011, # Define the spatial vector data with the locations to sample.
df = TRUE # Return the results as a data.frame?
)[-1] # The data.frame with the hyperspectral bands in `landsat5` minus the ID column
)
sampvals <- extract(x = landsat5, # Define the raster to be samples.
y = samp2011, # Define the spatial vector data with the locations to sample.
df = TRUE # Return the results as a data.frame?
)
landsat5
landsat5
plot(landsat5)
gc()
gc()
gc()
sampvals <- extract(x = landsat5, # Define the raster to be samples.
y = samp2011, # Define the spatial vector data with the locations to sample.
df = TRUE # Return the results as a data.frame?
)
plot(landsat5)
