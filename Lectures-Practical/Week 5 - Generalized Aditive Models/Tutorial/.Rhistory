URL.Loc <- "https://raw.githubusercontent.com/AlejoOrdonez/StaGeoMod2021/main/paruelo.csv"
## Use `read.table` to load the file and save it as an object named green
## The file paruelo.csv is a Comma-separated file
paruelo <- read.table(file = URL.Loc,
header = T,
sep = ,",")
head(paruelo)
par()
?par
names(paruelo)
head(MAP)
head(paruelo)
paruelo$MAP
boxplot(paruelo$MAP)
names(paruelo)
boxplot(paruelo$MAT)
par(mfrow = c(3,2)) # you need to specify two values here the number of rows an the number of columns
# Make a boxplot for MAP
boxplot(paruelo$MAP)
# Make a boxplot for MAT
boxplot(paruelo$MAT)
# Make a boxplot for JJAMAP
boxplot(paruelo$JJAMAP)
# Make a boxplot for DJFMAP
boxplot(paruelo$DJFMAP)
# Make a boxplot for LONG
boxplot(paruelo$LONG)
# Make a boxplot for LAT
boxplot(paruelo$LAT)
?boxplot
boxplot(paruelo$MAP,
xlab = "MAP")
par(mfrow = c(3,2)) # you need to specify two values here the number of rows an the number of columns
# Make a boxplot for MAP
boxplot(paruelo$MAP,
xlab = "MAP")
# Make a boxplot for MAT
boxplot(paruelo$MAT)
# Make a boxplot for JJAMAP
boxplot(paruelo$JJAMAP)
# Make a boxplot for DJFMAP
boxplot(paruelo$DJFMAP)
# Make a boxplot for LONG
boxplot(paruelo$LONG)
# Make a boxplot for LAT
boxplot(paruelo$LAT)
par(mfrow = c(1,1))
boxplot(paruelo$MAP,
main = "MAP")
names(paruelo)
par(mfrow = c(3,2)) # you need to specify two values here the number of rows an the number of columns
# Create a object named PredNames that has the names of the variables you want to plot.
names(paruelo)
PredNames <- c("MAP", # Mean annual precipitation (mm) variable as in the paruelo object.
"MAT", #  mean annual temperature (oC) variable as in the paruelo object.
"JJAMAP", #  proportion of MAP that fell in June, July and August variable as in the paruelo object.
"DJFMAP", #  proportion of MAP that fell in December, January and February variable as in the paruelo object.
"LONG", #  longitude variable as in the paruelo object.
"LAT") #  latitude variable as in the paruelo object.
# initialize your loop using i as an interator
for (i in PredNames){ # Here you need specify a object `in` range of values
boxplot(paruelo[,i], # What variable to plot using the itertor to specify the variable
main=i)  # add a title name using the iterator
}
par(mfrow=c(1,1))
par(mfrow = c(3,2),
mar=rep(2,4)) # you need to specify two values here the number of rows an the number of columns
# Create a object named PredNames that has the names of the variables you want to plot.
names(paruelo)
PredNames <- c("MAP", # Mean annual precipitation (mm) variable as in the paruelo object.
"MAT", #  mean annual temperature (oC) variable as in the paruelo object.
"JJAMAP", #  proportion of MAP that fell in June, July and August variable as in the paruelo object.
"DJFMAP", #  proportion of MAP that fell in December, January and February variable as in the paruelo object.
"LONG", #  longitude variable as in the paruelo object.
"LAT") #  latitude variable as in the paruelo object.
# initialize your loop using i as an interator
for (i in PredNames){ # Here you need specify a object `in` range of values
boxplot(paruelo[,i], # What variable to plot using the itertor to specify the variable
main=i)  # add a title name using the iterator
}
par(mfrow=c(1,1))
i
EvalVar <- paruelo[,i]
EvalVar <- sort(EvalVar, # define the object to be sorted
decreasing = T) # is the sorting in (de)incresing
plot(EvalVar)
plot(t(EvalVar))
plot(EvalVar)
par(mfrow = c(3,2),# you need to specify two values here the number of rows an the number of columns
mar=rep(4,4)) # here you define the 'margins" - blank space between plotting areas)
# Create a object named PredNames that has the names of the variables you want to plot.
names(paruelo)
PredNames <- c("MAP", # Mean annual precipitation (mm) variable as in the paruelo object.
"MAT", #  mean annual temperature (oC) variable as in the paruelo object.
"JJAMAP", #  proportion of MAP that fell in June, July and August variable as in the paruelo object.
"DJFMAP", #  proportion of MAP that fell in December, January and February variable as in the paruelo object.
"LONG", #  longitude variable as in the paruelo object.
"LAT") #  latitude variable as in the paruelo object.
# initialize your loop using i as an iterator
for (i in PredNames){ # Here you need specify a object `in` range of values
# Create and object names EvalVar with the variables of interest
EvalVar <- paruelo[,i]
# Sort the EvalVar object in decreasing order for this you need to use the function sort()
EvalVar <- sort(EvalVar, # define the object to be sorted
decreasing = T) # is the sorting in (de)incresing order
plot(x = EvalVar,
y = 1:length(EvalVar),
xlab = i,
ylab = "Order of the data")
}
par(mfrow = c(3,2),# you need to specify two values here the number of rows an the number of columns
mar=rep(2,4)) # here you define the 'margins" - blank space between plotting areas)
# Create a object named PredNames that has the names of the variables you want to plot.
names(paruelo)
PredNames <- c("MAP", # Mean annual precipitation (mm) variable as in the paruelo object.
"MAT", #  mean annual temperature (oC) variable as in the paruelo object.
"JJAMAP", #  proportion of MAP that fell in June, July and August variable as in the paruelo object.
"DJFMAP", #  proportion of MAP that fell in December, January and February variable as in the paruelo object.
"LONG", #  longitude variable as in the paruelo object.
"LAT") #  latitude variable as in the paruelo object.
# initialize your loop using i as an iterator
for (i in PredNames){ # Here you need specify a object `in` range of values
# Create and object names EvalVar with the variables of interest
EvalVar <- paruelo[,i]
# Sort the EvalVar object in decreasing order for this you need to use the function sort()
EvalVar <- sort(EvalVar, # define the object to be sorted
decreasing = T) # is the sorting in (de)incresing order
plot(x = EvalVar,
y = 1:length(EvalVar),
xlab = i,
ylab = "Order of the data")
}
par(mfrow = c(3,2),# you need to specify two values here the number of rows an the number of columns
mar=rep(3,4)) # here you define the 'margins" - blank space between plotting areas)
# Create a object named PredNames that has the names of the variables you want to plot.
names(paruelo)
PredNames <- c("MAP", # Mean annual precipitation (mm) variable as in the paruelo object.
"MAT", #  mean annual temperature (oC) variable as in the paruelo object.
"JJAMAP", #  proportion of MAP that fell in June, July and August variable as in the paruelo object.
"DJFMAP", #  proportion of MAP that fell in December, January and February variable as in the paruelo object.
"LONG", #  longitude variable as in the paruelo object.
"LAT") #  latitude variable as in the paruelo object.
# initialize your loop using i as an iterator
for (i in PredNames){ # Here you need specify a object `in` range of values
# Create and object names EvalVar with the variables of interest
EvalVar <- paruelo[,i]
# Sort the EvalVar object in decreasing order for this you need to use the function sort()
EvalVar <- sort(EvalVar, # define the object to be sorted
decreasing = T) # is the sorting in (de)incresing order
plot(x = EvalVar,
y = 1:length(EvalVar),
xlab = i,
ylab = "Order of the data")
}
par(mfrow = c(3,2),# you need to specify two values here the number of rows an the number of columns
mar=rep(4,4)) # here you define the 'margins" - blank space between plotting areas)
# Create a object named PredNames that has the names of the variables you want to plot.
names(paruelo)
PredNames <- c("MAP", # Mean annual precipitation (mm) variable as in the paruelo object.
"MAT", #  mean annual temperature (oC) variable as in the paruelo object.
"JJAMAP", #  proportion of MAP that fell in June, July and August variable as in the paruelo object.
"DJFMAP", #  proportion of MAP that fell in December, January and February variable as in the paruelo object.
"LONG", #  longitude variable as in the paruelo object.
"LAT") #  latitude variable as in the paruelo object.
# initialize your loop using i as an iterator
for (i in PredNames){ # Here you need specify a object `in` range of values
# Create and object names EvalVar with the variables of interest
EvalVar <- paruelo[,i]
# Sort the EvalVar object in decreasing order for this you need to use the function sort()
EvalVar <- sort(EvalVar, # define the object to be sorted
decreasing = T) # is the sorting in (de)incresing order
plot(x = EvalVar,
y = 1:length(EvalVar),
xlab = i,
ylab = "Order of the data")
}
par(mfrow = c(3,2),# you need to specify two values here the number of rows an the number of columns
mar=rep(4,4)) # here you define the 'margins" - blank space between plotting areas)
# Create a object named PredNames that has the names of the variables you want to plot.
names(paruelo)
PredNames <- c("MAP", # Mean annual precipitation (mm) variable as in the paruelo object.
"MAT", #  mean annual temperature (oC) variable as in the paruelo object.
"JJAMAP", #  proportion of MAP that fell in June, July and August variable as in the paruelo object.
"DJFMAP", #  proportion of MAP that fell in December, January and February variable as in the paruelo object.
"LONG", #  longitude variable as in the paruelo object.
"LAT") #  latitude variable as in the paruelo object.
# initialize your loop using i as an iterator
for (i in PredNames){ # Here you need specify a object `in` range of values
# Create and object names EvalVar with the variables of interest
EvalVar <- paruelo[,i]
# Sort the EvalVar object in increasing order for this you need to use the function sort()
EvalVar <- sort(EvalVar, # define the object to be sorted
decreasing = F) # is the sorting in (de)incresing order
plot(x = EvalVar, # the values
y = 1:length(EvalVar),
xlab = i,
ylab = "Order of the data")
}
for (i in PredNames){ # Here you need specify a object `in` range of values
# Create and object names EvalVar with the variables of interest
EvalVar <- paruelo[,i]
# Sort the EvalVar object in increasing order for this you need to use the function sort()
#EvalVar <- sort(EvalVar, # define the object to be sorted
#                decreasing = F) # is the sorting in (de)incresing order
plot(x = EvalVar, # the values
y = 1:length(EvalVar),
xlab = i,
ylab = "Order of the data")
}
names(paruelo)
PredNames <- c("MAP", # Mean annual precipitation (mm) variable as in the paruelo object.
"MAT", #  mean annual temperature (oC) variable as in the paruelo object.
"JJAMAP", #  proportion of MAP that fell in June, July and August variable as in the paruelo object.
"DJFMAP", #  proportion of MAP that fell in December, January and February variable as in the paruelo object.
"LONG", #  longitude variable as in the paruelo object.
"LAT") #  latitude variable as in the paruelo object.
# initialize your loop using i as an iterator
for (i in PredNames){ # Here you need specify a object `in` range of values
# Create and object names EvalVar with the variables of interest
EvalVar <- paruelo[,i]
# Sort the EvalVar object in increasing order for this you need to use the function sort()
EvalVar <- sort(EvalVar, # define the object to be sorted
decreasing = F) # is the sorting in (de)increasing order
plot(x = EvalVar, # the values of the variable of interest
y = 1:length(EvalVar), # a vector with the Order of the data
xlab = i, # set the x-axis label to the name of the variable
ylab = "Order of the data") # set the y-axis label to "Order of the data"
}
?round
?cor.test
URL.Loc <- "https://raw.githubusercontent.com/AlejoOrdonez/StaGeoMod2021/main/paruelo.csv"
## Use `read.table` to load the file and save it as an object named green
## The file paruelo.csv is a Comma-separated file
paruelo <- read.table(file = URL.Loc,
header = T,
sep = ,",")
head(paruelo)
head(mtcars)
boxplot(mtcars$mpg)
?boxplot
par(mfrow = c(3,2),# you need to specify two values here the number of rows an the number of columns
mar=rep(4,4)) # here you define the 'margins" - blank space between plotting areas)
# Create an object named PredNames that has the names of the variables you want to plot.
PredNames <- c("MAP", # Mean annual precipitation (mm) variable as in the paruelo object.
"MAT", #  mean annual temperature (oC) variable as in the paruelo object.
"JJAMAP", #  proportion of MAP that fell in June, July and August variable as in the paruelo object.
"DJFMAP", #  proportion of MAP that fell in December, January and February variable as in the paruelo object.
"LONG", #  longitude variable as in the paruelo object.
"LAT") #  latitude variable as in the paruelo object.
# initialize your loop using i as an iterator
for (i in PredNames){ # Here you need specify a object `in` range of values
# Create and object names EvalVar with the variables of interest
EvalVar <- paruelo[,i]
# Sort the EvalVar object in increasing order for this you need to use the function sort()
EvalVar <- sort(EvalVar, # define the object to be sorted
decreasing = F) # is the sorting in (de)increasing order
plot(x = EvalVar, # the values of the variable of interest
y = 1:length(EvalVar), # a vector with the Order of the data
xlab = i, # set the x-axis label to the name of the variable
ylab = "Order of the data") # set the y-axis label to "Order of the data"
}
par(mfrow = c(3,2), mar=rep(4,4)) # here you define the 'margins" - blank space between plotting areas)
# Create an object named PredNames that has the names of the variables you want to plot.
PredNames <- c("MAP",
"MAT",
"JJAMAP",
"DJFMAP",
"LONG",
"LAT")
# initialize your loop using i as an iterator
for (i in PredNames){ # Here you need specify a object `in` range of values
# Create and object names EvalVar with the variables of interest
EvalVar <- paruelo[,i]
# Sort the EvalVar object in increasing order for this you need to use the function sort()
EvalVar <- sort(EvalVar, # define the object to be sorted
decreasing = F) # is the sorting in (de)increasing order
plot(x = EvalVar, # the values of the variable of interest
y = 1:length(EvalVar), # a vector with the Order of the data
xlab = i, # set the x-axis label to the name of the variable
ylab = "Order of the data") # set the y-axis label to "Order of the data"
}
