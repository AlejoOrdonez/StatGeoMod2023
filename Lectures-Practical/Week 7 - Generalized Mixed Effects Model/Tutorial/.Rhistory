x1 <- RIKZ$NAP[RIKZ$Beach == i]
y1 <- F1[RIKZ$Beach == i]
K <- order(x1)
lines(x = sort(x1),
y = y1[K],
lty = 1,
lwd = 2,
col = hcl.colors(9)[i])
}
# add a legend
legend("topright",
col = c("black",hcl.colors(9)),
lty = c(1,rep(2,9)),
lwd = 2,
legend = c("All",paste("Beach",1:9)),
cex = 0.8)
plot(Richness ~ NAP,
data = RIKZ,
pch = 19,
col = hcl.colors(9)[RIKZ$Beach]
)
##Plot the Overall model
### get the Predicted values for the overall model
F0 <- fitted(Mlme2,
level = 0)
### Add the overall model
lines(x = sort(RIKZ$NAP),
y = F0[order(RIKZ$NAP)],
lwd = 2,
lty = 1,
col = "black")
### get the Predicted values for Each Beach
F1 <- fitted(Mlme2,
level = 1)
# add the Beach specific model
for (i in 1:9){
x1 <- RIKZ$NAP[RIKZ$Beach == i]
y1 <- F1[RIKZ$Beach == i]
K <- order(x1)
lines(x = sort(x1),
y = y1[K],
lty = 2,
lwd = 2,
col = hcl.colors(9)[i])
}
# add a legend
legend("topright",
col = c("black",hcl.colors(9)),
lty = c(1,rep(2,9)),
lwd = 2,
legend = c("All",paste("Beach",1:9)),
cex = 0.8)
Mlme2 <- lme(Richness ~ NAP,
random = ~NAP|Beach, # See this formulation... it indicates that each beach has its own mean effect
data = RIKZ,
method = "REML")
M.gls <- gls(Richness ∼ NAP, method = "REML", correlation = corCompSymm(form =∼ 1 | fBeach), data = RIKZ)
M.gls <- gls(Richness ~ NAP, method = "REML", correlation = corCompSymm(form =∼ 1 | fBeach), data = RIKZ)
M.gls <- gls(Richness ~ NAP,
method = "REML",
correlation = corCompSymm(form =~ 1 | fBeach),
data = RIKZ)
M.gls <- gls(Richness ~ NAP,
method = "REML",
correlation = corCompSymm(form =~ 1 | Beach),
data = RIKZ)
M.gls
anova(M.gls, Mlme2)
summary(M.gls)
coef(M.gls)
coef(Mlme1)
summary(Mlme1)
coef(Mlme1)
coef(M.gls)
summary(Mlme1)
summary(Mlme2)
M0.ML <- lme(Richness ~ NAP,
data = RIKZ,
random = ~1 | fBeach,
method = "ML")
M2.ML <- lme(Richness ~ NAP,
random = ~NAP | Beach,
method = "REML",
data = RIKZ)
M1.ML <- lme(Richness ~ NAP,
data = RIKZ,
random = ~1 | Beach,
method = "ML")
summat(M1.ML)
summary(M1.ML)
coef(summary(M1.ML))
coef(summary(Mlme1))
coef(summary(M1.ML))
# Look at the Estimates of the ML model
summary(M1.ML)
RIKZ$Exposure <- factor(RIKZ$Exposure)
M1.REML <- lme(Richness ~ NAP+Exposure,
data = RIKZ,
random = ~1 | Beach,
method = "REML")
# Build your random intercept model with ML
M1.ML <- lme(Richness ~ NAP+Exposure,
data = RIKZ,
random = ~1 | Beach,
method = "ML")
# Look at the Estimates of the REML model
summary(Mlme1)
# Look at the Estimates of the ML model
summary(M1.ML)
AIC(M1.REML,
M1.ML)
M1.REML <- lme(Richness ~ NAP,
data = RIKZ,
random = ~1 | Beach,
method = "REML")
# Build your random intercept model with ML
M1.ML <- lme(Richness ~ NAP,
data = RIKZ,
random = ~1 | Beach,
method = "ML")
# Look at the Estimates of the REML model
summary(M1.REML)
# Look at the Estimates of the ML model
summary(M1.ML)
### Based on this you will say that there is no difference, BUT What about the fit (measured with the AIC)
# Get the AIC of both models
AIC(M1.REML,
M1.ML)
AIC(M1.REML)
AIC(M1.ML)
M1.REML <- lme(Richness ~ NAP,
data = RIKZ,
random = ~NAP | Beach,
method = "REML")
M1.ML <- lme(Richness ~ NAP,
data = RIKZ,
random = ~NAP | Beach,
method = "ML")
coef(summary(M1.REML))
# Look at the Estimates of the ML model
coef(summary(M1.ML))
M1.REML <- lme(Richness ~ NAP,
data = RIKZ,
random = ~ NAP | Beach,
method = "REML")
M1.ML <- lme(Richness ~ NAP,
data = RIKZ,
random = ~ NAP | Beach,
method = "ML")
M1.ML
coef(M1.ML)
rm(M1.ML)
?lme
M1.ML <- lme(Richness ~ NAP,
data = RIKZ,
random = ~ NAP | Beach,
method = "ML",
control = list(optimMethod = "L-BFGS-B"))
M1.ML <- lme(Richness ~ NAP,
data = RIKZ,
random = ~ NAP | Beach,
method = "ML",
control = list(maxIter = 10000))
M1.ML <- lme(Richness ~ NAP,
data = RIKZ,
random = ~ NAP | Beach,
method = "ML",
control = list(msMaxIter = 10000))
M1.ML <- lme(Richness ~ NAP,
data = RIKZ,
random = ~ NAP | Beach,
method = "ML",
control = list(maxiter = 10000))
M1.ML <- lme(Richness ~ NAP,
data = RIKZ,
random = ~ NAP | Beach,
method = "ML",
control = lmeControl(maxiter = 10000))
M1.ML <- lme(Richness ~ NAP,
data = RIKZ,
random = ~ NAP | Beach,
method = "ML",
control = list(msMaxIter = 1000, msMaxEval = 1000))
M1.REML <- lme(Richness ~ NAP+ Exposure,
data = RIKZ,
random = ~ NAP | Beach,
method = "REML")
M1.REML <- lme(Richness ~ NAP+ Exposure,
data = RIKZ,
random = ~ 1 | Beach,
method = "REML")
M1.ML <- lme(Richness ~ NAP + Exposure,
data = RIKZ,
random = ~ 1 | Beach,
method = "ML")
coef(summary(M1.REML))
coef(summary(M1.ML))
AIC(M1.REML)
AIC(M1.ML)
data(RIKZ)
RIKZ$Beach <- factor(RIKZ$Beach)
RIKZ$Exposure[RIKZ$Exposure==8]
RIKZ$Beach <- factor(RIKZ$Beach)
RIKZ$Exposure[RIKZ$Exposure==8] <- 10
RIKZ$Exposure <- factor(RIKZ$Exposure)
M1.REML <- lme(Richness ~ NAP * Exposure,
data = RIKZ,
random = ~ 1 | Beach,
method = "REML")
# Build your random intercept model with ML
M1.ML <- lme(Richness ~ NAP * Exposure,
data = RIKZ,
random = ~ 1 | Beach,
method = "ML")
# Look at the Estimates of the REML model
coef(summary(M1.REML))
# Look at the Estimates of the ML model
coef(summary(M1.ML))
# No random structure
NoRandStr <- gls(Richness ~ 1 + NAP * Exp,
method = "REML",
data = RIKZ)
NoRandStr <- gls(Richness ~ 1 + NAP * Exposure,
method = "REML",
data = RIKZ)
# Random Intercept
RndInt <- lme(Richness ~1 + NAP * Exposure,
data = RIKZ,
random = ~1 | Beach,
method = "REML")
# Random Intercept/slope
RandIntSlop <- lme(Richness ~ 1 + NAP * Exposure,
data = RIKZ,
random = ~ NAP | Beach,
method="REML")
anova(NoRandStr,
RndInt)
anova(NoRandStr,
RndInt)
anova(NoRandStr,
RandIntSlop)
anova(RndInt,
RandIntSlop)
RndInt.ml <- update(RndInt,
method = "ML")
MASS::stepAIC(RndInt.ml)
step(RndInt.ml)
MASS::step(RndInt.ml)
summary(RndInt.ml)
summary(RndInt.mlSelect)
RndInt.mlSelect <- MASS::step(RndInt.ml,
direction = "both")
RndInt.mlSelect <- MASS::stepAIC(RndInt.ml,
direction = "both")
# print the summary of the model
summary(RndInt.mlSelect)
RndInt.mlSelect <- MASS::stepAIC(RndInt.ml,
direction = "both",
trace = 0)
summary(RndInt.mlSelect)
update(RndInt.mlSelect,
.~,-NAP:Exposure11)
update(RndInt.mlSelect,
".~,-NAP:Exposure11")
update(RndInt.mlSelect,
".~.-NAP:Exposure11")
update(RndInt.mlSelect,
.~.-NAP:Exposure11)
update(RndInt.mlSelect,
.~.- NAP:Exposure11)
update(RndInt.ml,
. ~ . - NAP:Exposure11)
update(RndInt.ml,
. ~ . -NAP:Exposure)
anova(RndInt.mlSelect,update(RndInt.ml,
. ~ . -NAP:Exposure))
plot(RndInt.mlSelect)
par(mfcol =c(2,2))
plot(RndInt.mlSelect)
RndInt.remlSelect <- update(RndInt.mlSelect,
method ="REML")
plot(RndInt.mlSelect)
residuals(RndInt.mlSelect, type="deviance")
residuals(RndInt.mlSelect, type="normalized")
qqnorm(residuals(RndInt.mlSelect, type="normalized"))
qqnorm(residuals(RndInt.mlSelect, type="normalized"))
qqline(residuals(RndInt.mlSelect, type="normalized"))
boxplot(residuals(RndInt.mlSelect, type="normalized") ~ Beach,
data =RIKZ)
anova(residuals(RndInt.mlSelect, type="normalized") ~ Beach,
data =RIKZ)
lm(residuals(RndInt.mlSelect, type="normalized") ~ Beach,
data =RIKZ)
anova(lm(residuals(RndInt.mlSelect, type="normalized") ~ Beach,
data =RIKZ))
boxplot(residuals(RndInt.mlSelect, type="normalized") ~ Beach,
data =RIKZ))
boxplot(residuals(RndInt.mlSelect, type="normalized") ~ Beach,
data =RIKZ)
anova(lm(residuals(RndInt.mlSelect, type="normalized") ~ Beach,
data =RIKZ))
qqnorm(residuals(RndInt.mlSelect, type="normalized"))
qqline(residuals(RndInt.mlSelect, type="normalized"))
rm(list=lc())
rm(list=ls())
rm(list=ls());gc()
data(RIKZ)
RIKZ$Richness
RIKZ$Richness <- log10(RIKZ$Richness+1)
RIKZ$Beach <- factor(RIKZ$Beach)
RIKZ$Exposure[RIKZ$Exposure==8] <- 10
RIKZ$Exposure <- factor(RIKZ$Exposure)
library(nlme)
library(MASS)
Mode.AllDta <- lm(Richness~NAP,
data=RIKZ)
# Check the model summary
summary(Mode.AllDta)
### this shows that NAP has an effect in Richness. ... BUT is this effect the same across all Beaches?
# Now lest see the model
## Plot the the observations
plot(Richness ~ NAP,
data = RIKZ,
pch = 19)
## Plot the model
abline(Mode.AllDta,
lty = 2,
lwd = 2,
col = "red")
par(mfcol=c(2,2))
plot(Mode.AllDta)
boxplot(rstandard(Mode.AllDta) ~ Beach,
data = RIKZ)
Mode.AllDta.2 <- lm(Richness~NAP*(Beach),
data=RIKZ)
# Check the effect of the continous and categorical variables
anova(Mode.AllDta.2)
summary(Mode.AllDta.2)
Beta <- vector(length=9)
# Use a loop to make a regerssion per Beach
for (i in 1:9){
tmpout<-summary(lm(Richness ~ NAP,
subset = (Beach == i),
data = RIKZ))
Beta[i] < -tmpout$coefficients[2,1]
}
# Print the coefficients
Beta
Beta
i
lm(Richness ~ NAP,
subset = (Beach == i),
data = RIKZ)
summary(lm(Richness ~ NAP,
subset = (Beach == i),
data = RIKZ))
tmpout<-summary(lm(Richness ~ NAP,
subset = (Beach == i),
data = RIKZ))
tmpout$coefficients
Beta <- vector(length=9)
# Use a loop to make a regerssion per Beach
for (i in 1:9){
tmpout<-summary(lm(Richness ~ NAP,
subset = (Beach == i),
data = RIKZ))
Beta[i] <- tmpout$coefficients[2,1]
}
Beta
plot(Richness ~ NAP,
data = RIKZ,
pch = 19)
## Plot the full model
abline(Mode.AllDta,
lty = 1,
lwd = 2,
col = "black")
# plot the Beach specific model
for (i in 1:9){
abline(lm(Richness ~ NAP,
subset = (Beach == i),
data = RIKZ),
lty = 1,
lwd = 2,
col = hcl.colors(9)[i])
}
# add a legend
legend("topright",
col = c("black",hcl.colors(9)),
lty = c(1,rep(2,9)),
lwd = 2,
legend = c("All",paste("Beach",1:9)))
M.gls <- gls(Richness ~ NAP,
method = "REML",
correlation = corCompSymm(form =~ 1 | Beach),
data = RIKZ)
# Print the Summary fo the model
summary(M.gls)
Mlme1 <- lme(Richness ~ NAP,
random = ~1|Beach, # See this formulation... it indicates that each beach has its own mean effect
data = RIKZ,
method = "REML")
# Call the Summary of this model
summary(Mlme1)
### The fixed effects part shows that the intercept α is 6.58 and the slope β is –2.56. These are the same as those of the Marginal model.
# Now lets plot the fitted values
## Plot the the observations
plot(Richness ~ NAP,
data = RIKZ,
pch = 19,
col = hcl.colors(9)[RIKZ$Beach]
)
##Plot the Overall model
### get the Predicted values for the overall model
F0 <- fitted(Mlme1,
level = 0)
### Add the overall model
lines(x = sort(RIKZ$NAP),
y = F0[order(RIKZ$NAP)],
lwd = 2,
lty = 1,
col = "black")
### get the Predicted values for Each Beach
F1 <- fitted(Mlme1,
level = 1)
# add the Beach specific model
for (i in 1:9){
x1 <- RIKZ$NAP[RIKZ$Beach == i]
y1 <- F1[RIKZ$Beach == i]
K <- order(x1)
lines(x = sort(x1),
y = y1[K],
lty = 1,
lwd = 2,
col = hcl.colors(9)[i])
}
# add a legend
legend("topright",
col = c("black",hcl.colors(9)),
lty = c(1,rep(2,9)),
lwd = 2,
legend = c("All",paste("Beach",1:9)),
cex = 0.8)
Mlme2 <- lme(Richness ~ NAP,
random = ~NAP|Beach, # See this formulation... it indicates that each beach has its own mean effect
data = RIKZ,
method = "REML")
# Call the Summary of this model
summary(Mlme2)
### The fixed effects part shows that the intercept α is 6.58 and the slope β is –2.56, so the change is only minor.
# Now lets plot the fitted values
## Plot the the observations
plot(Richness ~ NAP,
data = RIKZ,
pch = 19,
col = hcl.colors(9)[RIKZ$Beach]
)
##Plot the Overall model
### get the Predicted values for the overall model
F0 <- fitted(Mlme2,
level = 0)
### Add the overall model
lines(x = sort(RIKZ$NAP),
y = F0[order(RIKZ$NAP)],
lwd = 2,
lty = 1,
col = "black")
### get the Predicted values for Each Beach
F1 <- fitted(Mlme2,
level = 1)
# add the Beach specific model
for (i in 1:9){
x1 <- RIKZ$NAP[RIKZ$Beach == i]
y1 <- F1[RIKZ$Beach == i]
K <- order(x1)
lines(x = sort(x1),
y = y1[K],
lty = 2,
lwd = 2,
col = hcl.colors(9)[i])
}
# add a legend
legend("topright",
col = c("black",hcl.colors(9)),
lty = c(1,rep(2,9)),
lwd = 2,
legend = c("All",paste("Beach",1:9)),
cex = 0.8)
# Build your random intercept model with ML
M1.REML <- lme(Richness ~ NAP * Exposure,
data = RIKZ,
random = ~ 1 | Beach,
method = "REML")
# Build your random intercept model with ML
M1.ML <- lme(Richness ~ NAP * Exposure,
data = RIKZ,
random = ~ 1 | Beach,
method = "ML")
# Look at the Estimates of the REML model
coef(summary(M1.REML))
# Look at the Estimates of the ML model
coef(summary(M1.ML))
AIC(M1.REML)
AIC(M1.ML)
rm(list=ls());gc()getwd()
getwd()
data(RIKZ)
rm(list=ls())
data(RIKZ)
write.csv(RIKZ,"/Users/alejandroordonez/Library/CloudStorage/Dropbox/Courses_&_Conferences/2022/Courses/Statistical and Geospatial Modeling/Lectures-Practical/Week 7 - Generalized Mixed Effects Model/Tutorial/RIKZ.csv")
getwd()
setwd("/Users/alejandroordonez/Library/CloudStorage/Dropbox/Courses_&_Conferences/2022/Courses/Statistical and Geospatial Modeling/Lectures-Practical/Week 7 - Generalized Mixed Effects Model/Tutorial")
