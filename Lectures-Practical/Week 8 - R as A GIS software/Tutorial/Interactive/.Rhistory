unlink("RegressionsBasic_cache", recursive = TRUE)
?sort
names(paruelo)
Stdz.Model2
CRS.String <- "+proj=aea +lat_1=20 +lat_2=60 +lat_0=40 +lon_0=-96 +x_0=0 +y_0=0 +datum=NAD83 +units=m +no_def"
Bigfoot.dta <- read.csv("https://opendata.arcgis.com/datasets/9947fc49e6c44120b4a1b3133c073dbc_0.csv")
Bigfoot.SpaPnt <- SpatialPointsDataFrame(coords = Bigfoot.dta[, c("Lon", "Lat")] ,
proj4string = CRS("+proj=longlat +datum=WGS84"),
data = Bigfoot.dta)
library(raster)
library(rgdal)
library(sp)
library(maptools)
library(mapview)
Bigfoot.SpaPnt <- SpatialPointsDataFrame(coords = Bigfoot.dta[, c("Lon", "Lat")] ,
proj4string = CRS("+proj=longlat +datum=WGS84"),
data = Bigfoot.dta)
Bigfoot.SpaPnt.AEA <- spTransform(x = Bigfoot.SpaPnt ,
CRSobj = CRS(CRS.String))
data(wrld_simpl)
wrld.AEA <- spTransform(x = wrld_simpl, CRSobj = CRS(CRS.String))
NoAmPoly <- wrld_simpl[wrld_simpl@data[, "NAME"]%in%c("Canada", "United States", "Mexico"), ]
NoAmPoly.AEA <- spTransform(x = NoAmPoly , # The object to "re-project".
CRSobj = CRS(CRS.String))
WC.Bioclim <- stack("~Downloads/Lectures-Practical/Week 2 - R as A GIS software/Tutorial/Data/Bioclim.tif")
WC.Bioclim <- stack("~/Downloads/Lectures-Practical/Week 2 - R as A GIS software/Tutorial/Data/Bioclim.tif")
WC.Tmin <- stack("~/Downloads/Lectures-Practical/Week 2 - R as A GIS software/Tutorial/Data/tmin.tif")
WC.Tmax <- stack("~/Downloads/Lectures-Practical/Week 2 - R as A GIS software/Tutorial/Data/tmax.tif")
NoAm.WC.Bioclim <- crop(x= WC.Bioclim, y = Bigfoot.SpaPnt)
NoAm.WC.Bioclim.AEA <- projectRaster(from = NoAm.WC.Bioclim,crs = CRS(CRS.String))
rm(list=lc())
rm(list=ls())
gc()
gc()
CRS.String <- "+proj=aea +lat_1=20 +lat_2=60 +lat_0=40 +lon_0=-96 +x_0=0 +y_0=0 +datum=NAD83 +units=m +no_def"
library(raster)
library(rgdal)
library(sp)
library(maptools)
library(mapview)
# options
knitr::opts_chunk$set(echo = FALSE)
# Load the Base information
CRS.String <- "+proj=aea +lat_1=20 +lat_2=60 +lat_0=40 +lon_0=-96 +x_0=0 +y_0=0 +datum=NAD83 +units=m +no_def"
Bigfoot.dta <- read.csv("https://opendata.arcgis.com/datasets/9947fc49e6c44120b4a1b3133c073dbc_0.csv")
Bigfoot.SpaPnt <- SpatialPointsDataFrame(coords = Bigfoot.dta[, c("Lon", "Lat")] ,
proj4string = CRS("+proj=longlat +datum=WGS84"),
data = Bigfoot.dta)
Bigfoot.SpaPnt.AEA <- spTransform(x = Bigfoot.SpaPnt ,
CRSobj = CRS(CRS.String))
data(wrld_simpl)
wrld.AEA <- spTransform(x = wrld_simpl, CRSobj = CRS(CRS.String))
NoAmPoly <- wrld_simpl[wrld_simpl@data[, "NAME"]%in%c("Canada", "United States", "Mexico"), ]
NoAmPoly.AEA <- spTransform(x = NoAmPoly , # The object to "re-project".
CRSobj = CRS(CRS.String))
#~/Dropbox/Courses_&_Conferences/2022/Courses/Statistical and Geospatial Modeling/Lectures-Practical/Week 2 - R as A GIS software/Tutorial
WC.Bioclim <- stack("~/Downloads/Lectures-Practical/Week 2 - R as A GIS software/Tutorial/Data/Bioclim.tif")
WC.Tmin <- stack("~/Downloads/Lectures-Practical/Week 2 - R as A GIS software/Tutorial/Data/tmin.tif")
WC.Tmax <- stack("~/Downloads/Lectures-Practical/Week 2 - R as A GIS software/Tutorial/Data/tmax.tif")
NoAm.WC.Bioclim <- crop(x= WC.Bioclim, y = Bigfoot.SpaPnt)
NoAm.WC.Bioclim.AEA <- projectRaster(from = NoAm.WC.Bioclim,crs = CRS(CRS.String))
CRS.String <- "+proj=aea +lat_1=20 +lat_2=60 +lat_0=40 +lon_0=-96 +x_0=0 +y_0=0 +datum=NAD83 +units=m +no_def"
Bigfoot.SpaPnt.AEA <- spTransform(x = Bigfoot.SpaPnt , # Define the object to (re)projected.
CRSobj = CRS(CRS.String) # Define the projection to be used.
)
proj4string(Bigfoot.SpaPnt.AEA)
CRS.String
proj4string(Bigfoot.SpaPnt.AEA)
proj4string(Bigfoot.SpaPnt)
?spTransform
CRS(CRS.String)
CRS.String
Bigfoot.SpaPnt.AEA <- spTransform(x = Bigfoot.SpaPnt , # Define the object to (re)projected.
CRSobj = CRS(CRS.String) # Define the projection to be used.
)
proj4string(Bigfoot.SpaPnt.AEA)
Bigfoot.SpaPnt.AEA <- spTransform(x = Bigfoot.SpaPnt , # Define the object to (re)projected.
CRSobj = CRS("+proj=aea +lat_0=40 +lon_0=-96 +lat_1=20 +lat_2=60 +x_0=0 +y_0=0 +datum=NAD83 +units=m +no_defs +type=crs") # Define the projection to be used.
)
Bigfoot.SpaPnt.AEA <- spTransform(x = Bigfoot.SpaPnt , # Define the object to (re)projected.
CRSobj = CRS("+proj=aea +lat_0=40 +lon_0=-96 +lat_1=20 +lat_2=60 +x_0=0 +y_0=0 +datum=NAD83 +units=m +no_defs +type=crs") # Define the projection to be used.
)
proj4string(Bigfoot.SpaPnt.AEA)
plot(NoAmPoly.AEA,
col = 'lightgrey', # make the continual areas light-grey
bg = 'lightblue', # Make the oceans blue
xlim = range(coordinates(Bigfoot.SpaPnt.AEA)[, 1]), # Set limits to zoom into the region with points
ylim = range(coordinates(Bigfoot.SpaPnt.AEA)[, 2]), # Set limits to zoom into the region with points
main = "Bigfoot sigthings\n[1869 to 2017]",
cex.main = 1.2)
box()
axis(1, labels = NA); axis(2, labels = NA); axis(3, labels = NA); axis(4, labels = NA)
points(Bigfoot.SpaPnt.AEA ,
pch=19,
col = "red")
points(Bigfoot.SpaPnt.AEA[c(3595, 3682), ] ,
pch = 19,
cex=1.5,
col = "black")
lines(Lat.Long.Lines.AEA,
lty = 2)
line(Lat.Long.Lines.AEA,
lty = 2)
Lat.Long.Lines.AEA
summary(mtcars)
proj4string(Bigfoot.SpaPnt)
par(mfrow=c(1,1),
mar=c(2,2,4,2), # Defines the margins of the plotting space
fig=c(0,1,0.1,1),# this argument defines a smaller figure space
new=F) # this argument states that a blank plotting space is used
plot.new()
## Define the "limits" of the plotting space
plot.window(xlim = extent(Bigfoot.SpaPnt.AEA)[1:2], # get the xlim form the projected Bigfoot sightings
ylim = extent(Bigfoot.SpaPnt.AEA)[3:4]) # get the ylim form the projected Bigfoot sightings)
image(NoAm.WC.Bioclim.AEA[[1]]/10, # Define the Raster Layer to plot. You know why you divide by 10 here
col = hcl.colors(100, "YlOrRd", rev = TRUE), # Define a colour ramp palette
zlim = c(-20,30), # define the range of values to plot
add=T # Add this figure to the current plot?
)
mtext("Annual Mean Temperture [C]", # Define the main title text
side = 3, # Define the margin to locate the text.
cex = 1.5, # Define the text size
font = 2, # Define is the text is bold
line = 1.5 # Define the lien to add the text
)
box(); axis(1, labels = NA); axis(2, labels = NA); axis(3, labels = NA); axis(4,
labels = NA)
plot(NoAmPoly.AEA, # Define the SpatialPolygonsDataFrame to be plotted.
add=T # Add this figure to the current plot?
)
points(Bigfoot.SpaPnt.AEA, # Define the SpatialPointsDataFrame to plot.
pch = 10, # Define the shape of the mark.
col = "black" # Define the colour of the mark.
)
legend("bottomleft",
pch=10,
legend = "Bigfoot\nsightings",
bty="n")
par(fig=c(0,1,0.01,0.13),# this argument defines a smaller figure space
mar=c(2,2,1,2),
new=T) # this argument states that a black plotting space is used
# Plot a matrix with all possible values
image((matrix(1:100)),
axes=F,
col = hcl.colors(100, "YlOrRd", rev = TRUE))
# Add a bounding box
box()
# Add an axis with the values
axis(1,
at = seq(0,1, length.out = 6),
labels = c(-2:3)*10)
# Add a main title.
mtext("Annual Mean Temperture [C]",
side = 3,
cex = 1,
line = 0.3)
# Chunk 1: setup
# Load packages
library(learnr)
library(tidyverse)
library(raster)
library(rgdal)
library(sp)
library(maptools)
library(mapview)
# options
knitr::opts_chunk$set(echo = FALSE)
gradethis::gradethis_setup()
# Load the Base information
CRS.String <- "+proj=aea +lat_1=20 +lat_2=60 +lat_0=40 +lon_0=-96 +x_0=0 +y_0=0 +datum=NAD83 +units=m +no_def"
Bigfoot.dta <- read.csv("https://opendata.arcgis.com/datasets/9947fc49e6c44120b4a1b3133c073dbc_0.csv")
Bigfoot.SpaPnt <- SpatialPointsDataFrame(coords = Bigfoot.dta[, c("Lon", "Lat")] ,
proj4string = CRS("+proj=longlat +datum=WGS84"),
data = Bigfoot.dta)
Bigfoot.SpaPnt.AEA <- spTransform(x = Bigfoot.SpaPnt ,
CRSobj = CRS(CRS.String))
data(wrld_simpl)
wrld.AEA <- spTransform(x = wrld_simpl, CRSobj = CRS(CRS.String))
NoAmPoly <- wrld_simpl[wrld_simpl@data[, "NAME"]%in%c("Canada", "United States", "Mexico"), ]
NoAmPoly.AEA <- spTransform(x = NoAmPoly , # The object to "re-project".
CRSobj = CRS(CRS.String))
#~/Dropbox/Courses_&_Conferences/2022/Courses/Statistical and Geospatial Modeling/Lectures-Practical/Week 2 - R as A GIS software/Tutorial
WC.Bioclim <- stack("~/Downloads/Lectures-Practical/Week 2 - R as A GIS software/Tutorial/Data/Bioclim.tif")
WC.Tmin <- stack("~/Downloads/Lectures-Practical/Week 2 - R as A GIS software/Tutorial/Data/tmin.tif")
WC.Tmax <- stack("~/Downloads/Lectures-Practical/Week 2 - R as A GIS software/Tutorial/Data/tmax.tif")
NoAm.WC.Bioclim <- crop(x= WC.Bioclim, y = Bigfoot.SpaPnt)
WC.Bioclim
WC.Tmin
WC.Bioclim <- stack("~/Downloads/Lectures-Practical/Week 2 - R as A GIS software/Tutorial/Data/Bioclim.tif")
?aggregate
0.5/0.1666667
res(WC.Bioclim)
WC.Bioclim <- aggregate(WC.Bioclim,
fact = 0.5/res(WC.Bioclim)[1])
WC.Bioclim
plot(WC.Bioclim)
writeRaster(WC.Bioclim,"~/Downloads/Lectures-Practical/Week 2 - R as A GIS software/Tutorial/Data/Bioclim.tif")
?writeRaster
writeRaster(WC.Bioclim,"~/Downloads/Lectures-Practical/Week 2 - R as A GIS software/Tutorial/Data/Bioclim.tif",format="GTiff", overwrite=TRUE)
writeRaster(WC.Bioclim,"~/Downloads/Lectures-Practical/Week 2 - R as A GIS software/Tutorial/Data/Bioclim.tif",format="GTiff", overwrite=TRUE)
WC.Tmin <- stack("~/Downloads/Lectures-Practical/Week 2 - R as A GIS software/Tutorial/Data/tmin.tif")
WC.Tmin
WC.Tmin <- aggregate(WC.Tmin,
fact = 0.5/res(WC.Bioclim)[1])
writeRaster(WC.Tmin,"~/Downloads/Lectures-Practical/Week 2 - R as A GIS software/Tutorial/Data/tmin.tif",format="GTiff", overwrite=TRUE)
WC.Tmin <- stack("~/Downloads/Lectures-Practical/Week 2 - R as A GIS software/Tutorial/Data/tmin.tif")
WC.Tmin
WC.Tmin <- aggregate(WC.Tmin,
fact = 0.5/res(WC.Tmin)[1])
writeRaster(WC.Tmin,"~/Downloads/Lectures-Practical/Week 2 - R as A GIS software/Tutorial/Data/tmin.tif",format="GTiff", overwrite=TRUE)
WC.Tmin
WC.Tmax <- stack("~/Downloads/Lectures-Practical/Week 2 - R as A GIS software/Tutorial/Data/tmax.tif")
WC.Tmax <- aggregate(WC.Tmax,
fact = 0.5/res(WC.Tmax)[1])
writeRaster(WC.Tmax,"~/Downloads/Lectures-Practical/Week 2 - R as A GIS software/Tutorial/Data/tmax.tif",format="GTiff", overwrite=TRUE)
ls()
getwd()
setwd("/Users/alejandroordonez/Downloads/Lectures-Practical/Week 2 - R as A GIS software/Tutorial/Interactive")
WC.Bioclim <- stack("Bioclim.tif")
WC.Tmin <- stack("tmin.tif")
WC.Tmax <- stack("tmax.tif")
WC.Tmax
WC.Tmin
WC.Bioclim
WC.Bioclim <- stack("Bioclim.tif")
WC.Tmin <- stack("tmin.tif")
WC.Tmax <- stack("tmax.tif")
saveRDS(WC.Bioclim,"WC.Bioclim.rds")
WC.Bioclim <- stack(readRDS(gzcon(url"https://github.com/AlejoOrdonez/StaGeoMod2022/blob/main/Week%201%20-%20Data%20Exploration/Tutorial/Data/WC.Bioclim.rds")))
WC.Bioclim <- stack(readRDS(gzcon(url("https://github.com/AlejoOrdonez/StaGeoMod2022/blob/main/Week%201%20-%20Data%20Exploration/Tutorial/Data/WC.Bioclim.rds")))
)
getwd()
#~/Dropbox/Courses_&_Conferences/2022/Courses/Statistical and Geospatial Modeling/Lectures-Practical/Week 2 - R as A GIS software/Tutorial
WC.Bioclim <- stack("~/data/Bioclim.tif")
WC.Bioclim <- stack("~/data/Bioclim.tif")
dir()
WC.Bioclim <- stack("./data/Bioclim.tif")
rm(list=ls())
rm(list=ls())
gc()
gc()
WC.Bioclim <- stack("./data/Bioclim.tif")
WC.Bioclim <- stack("~/data/Bioclim.tif")
library(learnr)
library(tidyverse)
library(raster)
library(rgdal)
library(sp)
library(maptools)
library(mapview)
WC.Bioclim <- stack("~/data/Bioclim.tif")
WC.Bioclim <- stack("./data/Bioclim.tif")
#~/Dropbox/Courses_&_Conferences/2022/Courses/Statistical and Geospatial Modeling/Lectures-Practical/Week 2 - R as A GIS software/Tutorial
WC.Bioclim <- stack("data/Bioclim.tif")
Bigfoot.dta <- read.csv("https://opendata.arcgis.com/datasets/9947fc49e6c44120b4a1b3133c073dbc_0.csv")
Bigfoot.SpaPnt <- SpatialPointsDataFrame(coords = Bigfoot.dta[, c("Lon", "Lat")] ,
proj4string = CRS("+proj=longlat +datum=WGS84"),
data = Bigfoot.dta)
?shapefile
gwtwd()
getwd()
shapefile(Bigfoot.SpaPnt,"Bigfoot.SpaPnt.shp")
dir("data/")
saveRDS(Bigfoot.SpaPnt,"data/Bigfoot.SpaPnt.shp")
a <- read.RDS("data/Bigfoot.SpaPnt.shp")
a <- read.rds("data/Bigfoot.SpaPnt.shp")
a <- readRDS("data/Bigfoot.SpaPnt.shp")
a
Bigfoot.SpaPnt.AEA <- spTransform(x = Bigfoot.SpaPnt ,
CRSobj = CRS(CRS.String))
CRS.String <- "+proj=aea +lat_1=20 +lat_2=60 +lat_0=40 +lon_0=-96 +x_0=0 +y_0=0 +datum=NAD83 +units=m +no_def"
Bigfoot.SpaPnt.AEA <- spTransform(x = Bigfoot.SpaPnt ,
CRSobj = CRS(CRS.String))
saveRDS(Bigfoot.SpaPnt.AEA,"data/Bigfoot.SpaPnt.AEA.rds")
wrld.AEA <- spTransform(x = wrld_simpl, CRSobj = CRS(CRS.String))
data(wrld_simpl)
wrld.AEA <- spTransform(x = wrld_simpl, CRSobj = CRS(CRS.String))
NoAmPoly <- wrld_simpl[wrld_simpl@data[, "NAME"]%in%c("Canada", "United States", "Mexico"), ]
NoAmPoly.AEA <- spTransform(x = NoAmPoly , # The object to "re-project".
CRSobj = CRS(CRS.String))
WC.Bioclim <- stack("data/Bioclim.tif")
WC.Tmin <- stack("data/tmin.tif")
WC.Tmax <- stack("data/tmax.tif")
NoAm.WC.Bioclim <- crop(x= WC.Bioclim, y = Bigfoot.SpaPnt)
NoAm.WC.Bioclim.AEA <- projectRaster(from = NoAm.WC.Bioclim,crs = CRS(CRS.String))
BFC <- extract(x = WC.Bioclim , y = Bigfoot.SpaPnt)
saveRDS(WC.Bioclim,"data/Bioclim.rds")
readRDS("data/Bioclim.rds")
saveRDS(WC.Tmin,"data/tmin.rds")
saveRDS(WC.Tmax,"data/tmax.rds")
saveRDS(NoAm.WC.Bioclim,"data/NoAm.WC.Bioclim.rds")
NoAm.WC.Bioclim <- readRDS("data/NoAm.WC.Bioclim.rds")
saveRDS(NoAm.WC.Bioclim.AEA,"data/NoAm.WC.Bioclim.AEA.rds")
saveRDS(BFC,"data/BFC.rds")
saveRDS(wrld.AEA,"data/wrld.AEA.rds")
saveRDS(NoAmPoly,"data/NoAmPoly.rds")
saveRDS(NoAmPoly.AEA,"data/NoAmPoly.AEA.rds")
CRS.String <- "+proj=aea +lat_1=20 +lat_2=60 +lat_0=40 +lon_0=-96 +x_0=0 +y_0=0 +datum=NAD83 +units=m +no_def"
Bigfoot.dta <- read.csv("https://opendata.arcgis.com/datasets/9947fc49e6c44120b4a1b3133c073dbc_0.csv")
Bigfoot.SpaPnt <- readRDS("data/Bigfoot.SpaPnt.rds")
Bigfoot.SpaPnt.AEA <-readRDS("data/Bigfoot.SpaPnt.AEA.rds")
data(wrld_simpl)
wrld.AEA <- readRDS("data/wrld.AEA.rds")
NoAmPoly <- readRDS("data/NoAmPoly.rds")
NoAmPoly.AEA <- readRDS("data/NoAmPoly.AEA.rds")
WC.Bioclim <- readRDS("data/Bioclim.rds")
WC.Tmin <- readRDS("data/tmin.rds")
WC.Tmax <- readRDS("data/tmax.rds")
NoAm.WC.Bioclim <- readRDS("data/NoAm.WC.Bioclim.rds")
NoAm.WC.Bioclim.AEA <- readRDS("data/NoAm.WC.Bioclim.AEA.rds")
BFC <- reasRDS("data/BFC.rds")
BFC <- readRDS("data/BFC.rds")
